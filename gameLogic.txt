()CLIENT 
		send player moves 
		recive render every tick 

			
									WEBSOCKET 
												on message(type:'data'||'render',...)



SERVER 
		recive player moves/ update db and render
		send render every tick


ROUTES LOGIC ;
			POST 'api/pong/random/:userID'
				user join random MM
			POST 'api/pong/userID'
				user create game 
			POST 'api/pong/tournament/userID'
				create tournament for user to invite

			DELETE 'api/pong/:gameRoomID/:playerID'
				leave match
				delete from socket
			DELETE 'api/pong/tournamentID/userID'
				user leaves tournament			

			JOIN 'api/pong/:gameRoomID/targetID'
				user invite target to single game
			JOIN 'api/pong/tournament/:tournamentID/targetID'
				invite targetID to tournamentID



DB TABLES : 
			gameRoom{
				roomID:
				mode:
				tournamentID: NULLABLE
				rules -> JSON string{ball_velocity: , playerSpeed: , typeofwin: 'time'|'score',... }
				created at : 
			}
			gameMembers{
				gameRoomID:
				tournamentID: NULLABLE
				userID:
				alias:
			}
			tournament{
				tournamentID:
				round: 
				players_data JSON string{next round:{roomID:[pID:pID], roomID:[pID:pID]}}
			}
			stats{
				roomID:
				type:
				result:
				score:{user: , opponent: } --allows inifinte amount of opponent
				time:
				data{big JSON STRING or even separate table } -- ball location on win/losses for heatmap 
															  -- last bounce location before win-losses
															  -- avrg ball_velocity before win/losses
															  -- best combo(wins and|or point in a row/match)
															  -- avrg tick/points 
			}