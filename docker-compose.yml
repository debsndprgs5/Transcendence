services:
  app:
    build: .
    image: transcendence:latest
    volumes:
      - ./client/src:/app/client/src
      - ./src:/app/src
      - transcendence_volume:/app/runtime
      - db_volume:/app/db
      - avatars_volume:/app/client/avatars
      - shared_volume:/app/client/shared
    restart: always
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=${PORT}
      - WORK_DIR=${WORK_DIR}
      - USER=${USER}
      - SESSION_MANAGER=${SESSION_MANAGER}
    networks:
      - transcendence_net

  waf:
    build:
      context: ./src/WAF
      args:
        - APP_TARGET_PORT_BUILD_ARG=${PORT}
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - app
    networks:
      - transcendence_net

volumes:
  transcendence_volume:
    name: transcendence_volume
    driver: local
    driver_opts:
      type: none
      device: /goinfre/${USER}/transcendence
      o: bind
  db_volume:
    name: db_volume
    driver: local
    driver_opts:
      type: none
      device: ./src/db
      o: bind
  avatars_volume:
    name: avatars_volume
    driver: local
    driver_opts:
      type: none
      device: ./client/avatars
      o: bind
  shared_volume:
   name: shared_volume
   driver: local
   driver_opts:
    type: none
    device: ./shared
    o: bind

networks:
  transcendence_net:
    driver: bridge

